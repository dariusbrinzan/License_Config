- name: Actualizează lista de pachete și instalează dependențele necesare
  become: true
  ansible.builtin.apt:
    update_cache: yes
    name:
      - apt-transport-https
      - curl
    state: present

- name: Actualizează lista de pachete
  become: true
  apt:
    update_cache: yes

- name: Descarcă Minikube
  become: true
  ansible.builtin.get_url:
    url: https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
    dest: /usr/local/bin/minikube
    mode: '0755'

- name: Asigură permisiuni de execuție pentru Minikube
  become: true
  ansible.builtin.file:
    path: /usr/local/bin/minikube
    mode: '0755'

- name: Obține ultima versiune stabilă a kubectl
  become: true
  ansible.builtin.shell:
    cmd: curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt
  register: kubectl_version
  changed_when: false

- name: Afișează versiunea kubectl obținută
  ansible.builtin.debug:
    var: kubectl_version.stdout

- name: Descarcă kubectl folosind versiunea obținută
  become: true
  ansible.builtin.get_url:
    url: "https://storage.googleapis.com/kubernetes-release/release/{{ kubectl_version.stdout }}/bin/linux/amd64/kubectl"
    dest: "/usr/local/bin/kubectl"
    mode: '0755'

- name: Asigură permisiuni de execuție pentru kubectl
  become: true
  ansible.builtin.file:
    path: /usr/local/bin/kubectl
    mode: '0755'

- name: Instalează conntrack
  become: true
  ansible.builtin.apt:
    name: conntrack
    state: present

- name: Descarcă crictl
  become: true
  get_url:
    url: https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.24.0/crictl-v1.24.0-linux-amd64.tar.gz
    dest: "/tmp/crictl-v1.24.0-linux-amd64.tar.gz"
    mode: '0644'

- name: Extrage crictl în /usr/local/bin
  become: true
  ansible.builtin.shell:
    cmd: tar -xzf /tmp/crictl-v1.24.0-linux-amd64.tar.gz -C /usr/local/bin
    creates: /usr/local/bin/crictl

- name: Verifică versiunea crictl instalată
  become: true
  command: crictl --version
  register: crictl_version

- name: Afișează versiunea crictl
  debug:
    var: crictl_version.stdout

- name: Pornește Minikube folosind driver-ul none
  become: true
  command: minikube start --driver=none

# - name: Adaugă utilizatorul curent în grupul docker și execută newgrp
#   ansible.builtin.shell: |
#     usermod -aG docker "{{ ansible_env.SUDO_USER | default(ansible_env.USER) }}" && newgrp docker
#   become: true

# - name: Pornește Minikube
#   ansible.builtin.command:
#     cmd: minikube start --driver=docker
#   ignore_errors: yes

# - name: Verifică statusul Minikube
#   become: true
#   ansible.builtin.command:
#     cmd: minikube status --output=json
#   register: minikube_status

# - name: Afișează statusul Minikube
#   ansible.builtin.debug:
#     var: minikube_status.stdout
