---
- name: Clonează repositoriul NextJS de pe un branch specific
  git:
    repo: 'https://{{ github_username }}:{{ github_token }}@github.com/dariusbrinzan/Licenta.git'
    dest: '/home/ubuntu/Licenta'
    version: '{{ nextjs_repo_branch }}'
    clone: yes
    update: yes

- name: Clonează repositoriul NextJS config de pe un branch specific
  git:
    repo: 'https://{{ github_username }}:{{ github_token }}@github.com/dariusbrinzan/License_Config.git'
    dest: '/home/ubuntu/Config'
    version: '{{ config_repo_branch }}'
    clone: yes
    update: yes

- name: Verifică dacă imaginea Docker există
  shell: docker images -q nextjs_license:latest
  register: docker_image_check
  become: true

- name: Construiește imaginea Docker folosind Dockerfile din directorul Licenta
  shell: docker build -t nextjs_license .
  args:
    chdir: /home/ubuntu/Licenta
  become: true
  when: docker_image_check.stdout == ""

- name: Verifică dacă imaginea Docker a fost creată
  shell: docker images -q nextjs_license:latest
  register: docker_image_check
  failed_when: docker_image_check.stdout == ""
  become: true

- name: Instalează pip3
  become: true
  ansible.builtin.apt:
    name: python3-pip
    state: present
    update_cache: yes

- name: Instalează Docker SDK pentru Python
  become: true
  ansible.builtin.pip:
    name: docker
    state: present

- name: Instalează Docker Compose
  become: true
  ansible.builtin.get_url:
    url: https://github.com/docker/compose/releases/download/1.29.2/docker-compose-{{ ansible_system }}-{{ ansible_userspace_architecture }}
    dest: /usr/local/bin/docker-compose
    mode: '0755'

- name: Instalează Docker Compose cu pip
  become: true
  ansible.builtin.pip:
    name: docker-compose
    state: present

- name: Rulează Docker Compose
  community.docker.docker_compose:
    project_src: /home/ubuntu/Config/K8s
    state: present
  register: docker_compose_result

- name: Afișează rezultatul Docker Compose
  ansible.builtin.debug:
    var: docker_compose_result


# - name: Desfășurare aplicație Next.js în Minikube
#   become: true
#   ansible.builtin.command:
#     cmd: kubectl apply -f "/home/ubuntu/Config/K8s/deployment.yaml"
#   register: deployment_result

# - name: Afișează rezultatul desfășurării
#   ansible.builtin.debug:
#     var: deployment_result.stdout_lines
